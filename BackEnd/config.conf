user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;

events {
    worker_connections 8;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    index   index.html index.htm;
   
    # A does-nothing server to redirect all http requests to https... 
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        return 301 https://$host$request_uri;
    }

    # Our actual server...
    server {
        listen       443 ssl;
        listen       [::]:443 ssl;
        #listen      80 default_server;
        #listen      [::]:80 default_server;
        server_name  iot-lab.local;
        root         /usr/share/nginx/html;

        ssl_certificate /etc/certs/fullchain.pem;
        ssl_certificate_key /etc/certs/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        # Enable HSTS for greater security...
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
        }

        location /SRUP/ {
                auth_basic "Restricted";
                auth_basic_user_file /etc/nginx/.htpasswd;
        }

        location /C2/ 
        {
                rewrite /C2/(.*) /$1 break;
                proxy_pass http://localhost:5000;
        }

        location /KeyEx/ 
        {
                rewrite /KeyEx/(.*) /$1 break;
                proxy_pass http://keyex:8000;
        }

        # redirect server error pages to the static page /40x.html
        #
        error_page 404 /404.html;
            location = /40x.html {
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

    }
}
